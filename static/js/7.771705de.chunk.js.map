{"version":3,"sources":["utils/docCookies.ts","modules/login/index.tsx"],"names":["docCookies","getItem","sKey","decodeURIComponent","document","cookie","replace","RegExp","encodeURIComponent","setItem","sValue","vEnd","sPath","sDomain","bSecure","test","sExpires","constructor","Number","Infinity","String","Date","toUTCString","removeItem","this","hasItem","keys","aKeys","split","nIdx","length","verifyCodeApi","observer","props","useState","treeData","setTreeData","orgId","username","password","verifyCode","formState","setFormState","undefined","verify","setVerify","uuid","verifyRandomCode","setVerifyRandomCode","loginError","setLoginError","useEffect","recurseData","data","forEach","item","Node","Children","title","NAME","CODE","key","ID","value","children","$api","then","res","Data","commonStore","setOrgInfo","cookieOrgId","$consts","preLogin","MD5","random","verificationCode","error","setAccessToken","Parameter1","Parameter2","Parameter4","setLoginData","firstMenu","appStore","activeMenu","getFirstValidTree","Menus","history","push","toLogin","error_description","catch","err","message","handleLogin","formFieldInvalid","className","Item","validateStatus","treeDefaultExpandAll","onChange","val","dropdownStyle","maxHeight","overflow","placeholder","evt","target","onPressEnter","prefix","UserOutlined","style","fontSize","type","LockOutlined","defaultChecked","SecurityScanOutlined","suffix","src","getBaseURL","alt","onClick","disabled","loadingStore","visible","loading","href","rel","color"],"mappings":"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","file":"static/js/7.771705de.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\r\nconst docCookies = {\r\n  getItem: function (sKey: string) {\r\n    return decodeURIComponent(document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + encodeURIComponent(sKey).replace(/[-.+*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\")) || null\r\n  },\r\n  setItem: function (sKey: string, sValue: string, vEnd?: any, sPath?: string, sDomain?: string, bSecure?: string) {\r\n    if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) { return false }\r\n    var sExpires = \"\"\r\n    if (vEnd) {\r\n      switch (vEnd.constructor) {\r\n        case Number:\r\n          sExpires = vEnd === Infinity ? \"; expires=Fri, 31 Dec 9999 23:59:59 GMT\" : \"; max-age=\" + vEnd\r\n          break\r\n        case String:\r\n          sExpires = \"; expires=\" + vEnd\r\n          break\r\n        case Date:\r\n          sExpires = \"; expires=\" + vEnd.toUTCString()\r\n          break\r\n      }\r\n    }\r\n    document.cookie = encodeURIComponent(sKey) + \"=\" + encodeURIComponent(sValue) + sExpires + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\") + (bSecure ? \"; secure\" : \"\")\r\n    return true\r\n  },\r\n  removeItem: function (sKey: string, sPath: string, sDomain: string) {\r\n    if (!sKey || !this.hasItem(sKey)) { return false }\r\n    document.cookie = encodeURIComponent(sKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\")\r\n    return true\r\n  },\r\n  hasItem: function (sKey: string) {\r\n    return (new RegExp(\"(?:^|;\\\\s*)\" + encodeURIComponent(sKey).replace(/[-.+*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie)\r\n  },\r\n  keys: /* optional method: you can safely remove it! */ function () {\r\n    var aKeys = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/)\r\n    for (var nIdx = 0; nIdx < aKeys.length; nIdx++) { aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]) }\r\n    return aKeys\r\n  }\r\n}\r\n\r\nexport default docCookies","import { useState, useEffect } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { Button, Checkbox, Form, Input, TreeSelect } from 'antd'\r\nimport { UserOutlined, SecurityScanOutlined, LockOutlined } from '@ant-design/icons'\r\nimport { commonStore, appStore, loadingStore } from 'src/stores'\r\nimport { $api, $consts } from 'src/plugins'\r\nimport { uuid, getBaseURL, getFirstValidTree } from 'src/utils/tools'\r\nimport docCookies from 'src/utils/docCookies'\r\nimport MD5 from 'md5'\r\nimport 'src/styles/modules/login/login.less'\r\n\r\nconst verifyCodeApi = 'Common/VerificationCode/Number'\r\n\r\nconst Login = (props: any) => {\r\n  const [treeData, setTreeData] = useState([])\r\n  const [formState, setFormState] = useState({\r\n    orgId: '',\r\n    username: '',\r\n    password: '',\r\n    verifyCode: '',\r\n  })\r\n  const [verify, setVerify] = useState<any>({\r\n    orgId: undefined,\r\n    username: undefined,\r\n    password: undefined,\r\n    verifyCode: undefined\r\n  })\r\n  const [verifyRandomCode, setVerifyRandomCode] = useState(uuid())\r\n  const [loginError, setLoginError] = useState('')\r\n\r\n  // 获取组织树\r\n  useEffect(() => {\r\n    const recurseData = (data: any) => {\r\n      data.forEach((item: any) => {\r\n        const { Node = item, Children } = item\r\n        item.title = `${Node.NAME}(${Node.CODE})`\r\n        item.key = Node.ID\r\n        item.value = Node.ID\r\n        item.children = Children\r\n        Children && Children.length && recurseData(Children)\r\n      })\r\n    }\r\n\r\n    $api['common/getOrgList']().then((res: any) => {\r\n      if (res && res.Data) {\r\n        commonStore.setOrgInfo(res)\r\n        recurseData(res.Data)\r\n        setTreeData(res.Data)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  // 获取组织默认选中\r\n  useEffect(() => {\r\n    if (!formState.orgId) {\r\n      const cookieOrgId = docCookies.getItem($consts['STORAGE/COOKIE_ORG_ID'])\r\n      cookieOrgId && setFormState({ ...formState, orgId: cookieOrgId })\r\n    }\r\n  }, [formState])\r\n\r\n  const handleTreeSelect = (val: string) => {\r\n    // 这边用 cookie 存，因为退出登录时候，会清空所有的 localStorage 存储数据\r\n    docCookies.setItem($consts['STORAGE/COOKIE_ORG_ID'], val)\r\n    setFormState({ ...formState, orgId: val })\r\n  }\r\n\r\n  const formFieldInvalid = () => {\r\n    const { orgId, username, password, verifyCode } = formState\r\n    setVerify({\r\n      orgId: orgId ? undefined : 'error',\r\n      username: username ? undefined : 'error',\r\n      password: password ? undefined : 'error',\r\n      verifyCode: verifyCode ? undefined : 'error'\r\n    })\r\n    return !orgId || !username || !password || !verifyCode\r\n  }\r\n\r\n  const toLogin = () => {\r\n    const { orgId, username, password } = formState\r\n    $api['common/login']({\r\n      Parameter1: username,\r\n      Parameter2: MD5(password),\r\n      Parameter4: orgId\r\n    }).then((res: any) => {\r\n      if (res) {\r\n        commonStore.setLoginData(res, { username, password: MD5(password), orgId })\r\n        $api['common/getAllEnum']()\r\n        // 载入第一项菜单页\r\n        const firstMenu = appStore.activeMenu?.ID || getFirstValidTree(res.Menus[0])\r\n        props.history.push(`/main/${firstMenu}`)\r\n      }\r\n    })\r\n  }\r\n\r\n  const preLogin = () => {\r\n    const { orgId, username, password, verifyCode } = formState\r\n    $api['common/getToken']({\r\n      orgId,\r\n      username,\r\n      password: MD5(password),\r\n      random: verifyRandomCode,\r\n      verificationCode: verifyCode\r\n    }).then((res: any) => {\r\n      if (res && !res.error) {\r\n        commonStore.setAccessToken(res)\r\n        toLogin()\r\n        return\r\n      }\r\n      setLoginError(res.error_description)\r\n    }).catch((err: any) => {\r\n      setLoginError(err.message)\r\n    })\r\n  }\r\n\r\n  const handleLogin = () => {\r\n    !formFieldInvalid() && preLogin()\r\n  }\r\n\r\n  const { orgId, username, password, verifyCode } = verify\r\n  return (\r\n    <div className='login-page'>\r\n      <div className='login-page__login'>\r\n        <p className='login-page__login-cn'>OPTiWeb纸机智能控制系统</p>\r\n        <div className='login-page__login-box'>\r\n          <Form className='login-page__login-form'>\r\n            <Form.Item validateStatus={orgId}>\r\n              <TreeSelect\r\n                treeDefaultExpandAll\r\n                treeData={treeData}\r\n                value={formState.orgId}\r\n                onChange={handleTreeSelect}\r\n                dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\r\n                placeholder='请选择组织'\r\n                className='login-page__login-tree'\r\n              />\r\n            </Form.Item>\r\n            <Form.Item validateStatus={username}>\r\n              <Input\r\n                onChange={evt => setFormState({ ...formState, username: evt.target.value })}\r\n                onPressEnter={handleLogin}\r\n                prefix={<UserOutlined style={{ fontSize: 18 }} />}\r\n                placeholder=\"请输入用户名\"\r\n                className='login-page__login-input'\r\n              />\r\n            </Form.Item>\r\n            <Form.Item validateStatus={password}>\r\n              <Input\r\n                type='password'\r\n                onChange={evt => setFormState({ ...formState, password: evt.target.value })}\r\n                onPressEnter={handleLogin}\r\n                prefix={<LockOutlined style={{ fontSize: 18 }} />}\r\n                placeholder='请输入密码'\r\n                className='login-page__login-input'\r\n              />\r\n            </Form.Item>\r\n            <div className='login-page__login-pwd'>\r\n              <Checkbox defaultChecked>记住密码</Checkbox>\r\n              {/* <a>忘记密码？</a> */}\r\n            </div>\r\n            <Form.Item validateStatus={verifyCode}>\r\n              <Input\r\n                onChange={evt => setFormState({ ...formState, verifyCode: evt.target.value })}\r\n                onPressEnter={handleLogin}\r\n                prefix={<SecurityScanOutlined style={{ fontSize: 18 }} />}\r\n                suffix={\r\n                  <img\r\n                    key={verifyRandomCode}\r\n                    src={`${getBaseURL(verifyCodeApi)}/${verifyCodeApi}?random=${verifyRandomCode}`}\r\n                    alt='验证码'\r\n                    onClick={() => setVerifyRandomCode(uuid())}\r\n                    className='login-page__login-verifyCode'\r\n                  />\r\n                }\r\n                placeholder='验证码'\r\n                className='login-page__login-input'\r\n              />\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        <Button\r\n          type='primary'\r\n          className='login-page__login-btn'\r\n          disabled={loadingStore.visible}\r\n          loading={loadingStore.visible}\r\n          onClick={handleLogin}\r\n        >登录</Button>\r\n        {loginError ? <div className='login-page__login-error'>{loginError}</div> : null}\r\n      </div>\r\n      <div className='login-page__copyright'>\r\n        <p>Copyright ©2020-2021 厦门奥普拓自控科技有限公司 optiems <a href=\"https://beian.miit.gov.cn/\" rel=\"noopener noreferrer\" target=\"_blank\" style={{ color: 'inherit' }}>闽ICP备17001301号-5</a></p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(Login)"],"sourceRoot":""}